version: '3.8'

services:
  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:3001
      - NEXT_PUBLIC_WS_URL=ws://backend:8080
      - NEXT_PUBLIC_GRPC_URL=grpc:50051
    depends_on:
      - backend
      - grpc
    networks:
      - dirk-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
      - "8080:8080"
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://dirk:dirk@postgres:5432/dirkbrain}
      - REDIS_URL=redis://redis:6379
      - GRPC_HOST=grpc
      - GRPC_PORT=50051
    env_file:
      - ./backend/.env
    depends_on:
      - postgres
      - redis
    networks:
      - dirk-network
    volumes:
      - ./backend:/app
      - backend-venv:/app/venv

  # gRPC GodMode Service
  grpc:
    build:
      context: ./backend
      dockerfile: Dockerfile.grpc
    ports:
      - "50051:50051"
    environment:
      - GRPC_PORT=50051
    networks:
      - dirk-network
    volumes:
      - ./backend:/app

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=dirk
      - POSTGRES_PASSWORD=dirk
      - POSTGRES_DB=dirkbrain
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - dirk-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dirk"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - dirk-network
    command: redis-server --appendonly yes

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - dirk-network

networks:
  dirk-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  backend-venv: